{"ast":null,"code":"import axios from \"axios\";\nexport const api = axios.create({\n  baseURL: 'https://blogpessoal-yw3t.onrender.com'\n});\nexport const login = async (url, dados, setDados) => {\n  const resposta = await api.post(url, dados);\n  setDados(resposta.data.token);\n};\n\n// Tipagem de dados da função assincrona:\n// url: string => a url, sempre será um texto, portanto a anotação de string nela\n// dados: Object => os dados que enviamos para o nosso backend, sempre irão no padrão JSON, que para o typescript, é um Objeto\n// setDados: Function => sempre iremos executar uma função para atualizar os dados, por isso, a tipagem de Função\nexport const cadastro = async (url, dados, setDados) => {\n  const resposta = await api.post(url, dados);\n  setDados(resposta.data);\n};\nexport const busca = async (url, setDados, headers) => {\n  const resposta = await api.get(url, headers);\n  setDados(resposta.data);\n};\nexport const buscaId = async (url, setDados, headers) => {\n  const resposta = await api.get(url, headers);\n  setDados(resposta.data);\n};\nexport const post = async (url, dados, setDados, headers) => {\n  const resposta = await api.post(url, dados, headers);\n  setDados(resposta.data);\n};\nexport const put = async (url, dados, setDados, headers) => {\n  const resposta = await api.put(url, dados, headers);\n  setDados(resposta.data);\n};\nexport const deleteId = async (url, headers) => {\n  await api.delete(url, headers);\n};","map":{"version":3,"names":["axios","api","create","baseURL","login","url","dados","setDados","resposta","post","data","token","cadastro","busca","headers","get","buscaId","put","deleteId","delete"],"sources":["C:/Users/camil/OneDrive/Área de Trabalho/BD/blogPessoal--React-/src/services/Service.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'https://blogpessoal-yw3t.onrender.com'\r\n})\r\n\r\nexport const login = async(url: any, dados: any, setDados: any) => {\r\n  const resposta = await api.post(url, dados)\r\n  setDados(resposta.data.token)\r\n}\r\n\r\n// Tipagem de dados da função assincrona:\r\n// url: string => a url, sempre será um texto, portanto a anotação de string nela\r\n// dados: Object => os dados que enviamos para o nosso backend, sempre irão no padrão JSON, que para o typescript, é um Objeto\r\n// setDados: Function => sempre iremos executar uma função para atualizar os dados, por isso, a tipagem de Função\r\nexport const cadastro = async(url: string, dados: Object, setDados: Function) => {\r\n  const resposta = await api.post(url, dados)\r\n  setDados(resposta.data)\r\n}\r\n\r\nexport const busca = async(url: any, setDados: any, headers: any) => {\r\n  const resposta = await api.get(url, headers)\r\n  setDados(resposta.data)\r\n}\r\n\r\nexport const buscaId = async(url: any, setDados: any, headers: any) => {\r\n  const resposta = await api.get(url, headers)\r\n  setDados(resposta.data)\r\n}\r\n\r\nexport const post = async(url: any, dados: any, setDados: any, headers: any) => {\r\n  const resposta = await api.post(url, dados, headers)\r\n  setDados(resposta.data)\r\n}\r\n\r\nexport const put = async(url: any, dados: any, setDados: any, headers: any) => {\r\n  const resposta = await api.put(url, dados, headers)\r\n  setDados(resposta.data)\r\n}\r\n\r\nexport const deleteId = async(url: any, headers: any) => {\r\n  await api.delete(url, headers)\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC9BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAMC,GAAQ,EAAEC,KAAU,EAAEC,QAAa,KAAK;EACjE,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAACJ,GAAG,EAAEC,KAAK,CAAC;EAC3CC,QAAQ,CAACC,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAMP,GAAW,EAAEC,KAAa,EAAEC,QAAkB,KAAK;EAC/E,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAACJ,GAAG,EAAEC,KAAK,CAAC;EAC3CC,QAAQ,CAACC,QAAQ,CAACE,IAAI,CAAC;AACzB,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAMR,GAAQ,EAAEE,QAAa,EAAEO,OAAY,KAAK;EACnE,MAAMN,QAAQ,GAAG,MAAMP,GAAG,CAACc,GAAG,CAACV,GAAG,EAAES,OAAO,CAAC;EAC5CP,QAAQ,CAACC,QAAQ,CAACE,IAAI,CAAC;AACzB,CAAC;AAED,OAAO,MAAMM,OAAO,GAAG,MAAAA,CAAMX,GAAQ,EAAEE,QAAa,EAAEO,OAAY,KAAK;EACrE,MAAMN,QAAQ,GAAG,MAAMP,GAAG,CAACc,GAAG,CAACV,GAAG,EAAES,OAAO,CAAC;EAC5CP,QAAQ,CAACC,QAAQ,CAACE,IAAI,CAAC;AACzB,CAAC;AAED,OAAO,MAAMD,IAAI,GAAG,MAAAA,CAAMJ,GAAQ,EAAEC,KAAU,EAAEC,QAAa,EAAEO,OAAY,KAAK;EAC9E,MAAMN,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAACJ,GAAG,EAAEC,KAAK,EAAEQ,OAAO,CAAC;EACpDP,QAAQ,CAACC,QAAQ,CAACE,IAAI,CAAC;AACzB,CAAC;AAED,OAAO,MAAMO,GAAG,GAAG,MAAAA,CAAMZ,GAAQ,EAAEC,KAAU,EAAEC,QAAa,EAAEO,OAAY,KAAK;EAC7E,MAAMN,QAAQ,GAAG,MAAMP,GAAG,CAACgB,GAAG,CAACZ,GAAG,EAAEC,KAAK,EAAEQ,OAAO,CAAC;EACnDP,QAAQ,CAACC,QAAQ,CAACE,IAAI,CAAC;AACzB,CAAC;AAED,OAAO,MAAMQ,QAAQ,GAAG,MAAAA,CAAMb,GAAQ,EAAES,OAAY,KAAK;EACvD,MAAMb,GAAG,CAACkB,MAAM,CAACd,GAAG,EAAES,OAAO,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}